const Callback = Symbol('Callback');
const Children = Symbol('Children');
const Initialized = Symbol('Initialized');

module.exports = class Stream {
    constructor(cb = data => data) {
        this[Callback] = cb;
        this[Children] = [];
        this[Initialized] = false;
    }

    notify(data) {
        let x = this[Callback](data);
        this.data = data;
        this[Initialized] = true;
        for (let i in this[Children]) {
            this[Children][i].notify(x);
        }
    }

    then(callback = data => data) {
        let s = new Stream(callback);
        this[Children].push(s);
        if (this[Initialized]) {
            s.notify(this.data);
        }
        return s;
    }

    map(callback = data => data) {
        return this.then(data => data.map(callback));
    }
};